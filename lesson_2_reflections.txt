
git init - initialize a repository
git add - add files to staging area which are to be commited
git status - check status of files in repository
staging area - an intermediate area before and after commiting files
working directory - present directory where files are stored
So
There is a layer between working directory and local repository. It is called staging area. When you add your changed files using 'git add', the changes first gets stored in staging area for checking. Then you can use 'git commit' to further push your changes from staging area to local repo.

git diff - see differences in working directory files and staging area files
git diff --staged - see differences in staging area files and current repository commited HEAD files
git reset --hard - reset all changes in staging area and working directory when the changes are not required.
git checkout master - to fix the head to most recent commits

Branches
git branch - shows different branches in your project
git branch name_branch  - creates new branch which is named as name_branch
 Branches can be helpful in doing experimental changes to codes, or adding new languages to present code.
Master branch can be thought of as a production branch which is the correct branch and all other branches are experimental branches. We can merge these experimental branches to the Master when we find the experiments are working fine and are needed to be added to the production.
Viewing the commit history

the visual representation of the commit history is git log --graph --oneline branch1 branch2.
How do the diagrams help you visualize the branch structure?
	diagrams helps to visualize branches and which branch can be reached and which can't be. It helps to idetify which branch has parents and which are master.  
